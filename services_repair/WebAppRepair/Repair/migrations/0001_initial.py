# Generated by Django 4.2.7 on 2023-11-13 21:04

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_acceptance', models.DateField(blank=True, null=True, verbose_name='Дата принятия')),
                ('date_of_dismissal', models.DateField(blank=True, null=True, verbose_name='Дата увольнения')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание материала')),
                ('image', models.ImageField(blank=True, upload_to='images', verbose_name='Изображение')),
                ('type_material', models.CharField(choices=[('Клиента', 'Клиента'), ('Ателье', 'Ателье')], max_length=120, null=True, verbose_name='Вид материала')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
            },
        ),
        migrations.CreateModel(
            name='Materials_accounting_journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Repair.employee', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Журнал учета материалов',
                'verbose_name_plural': 'Журналы учета материалов',
            },
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Мерка',
                'verbose_name_plural': 'Мерки',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Номер')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('date_of_the_first_fitting', models.DateField(blank=True, null=True, verbose_name='Дата первой примерки')),
                ('date_of_the_second_fitting', models.DateField(blank=True, null=True, verbose_name='Дата второй примерки')),
                ('planned_production_date', models.DateField(blank=True, null=True, verbose_name='Плановая дата изготовления')),
                ('actual_production_date', models.DateField(blank=True, null=True, verbose_name='Фактическая дата изготовления')),
                ('NDS', models.IntegerField(verbose_name='Ставка НДС')),
            ],
            options={
                'verbose_name': 'Заказ',
            },
        ),
        migrations.CreateModel(
            name='Price_list_material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Номер прайс-листа')),
                ('date', models.DateField(auto_now_add=True, null=True, verbose_name='Дата утверждения прайс-листа')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Repair.employee', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Прайс-лист на материалы',
                'verbose_name_plural': 'Прайс-листы на материалы',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название изделия')),
                ('description', models.TextField(verbose_name='Описание изделия')),
                ('decorative_elements', models.TextField(verbose_name='Декоративные элементы')),
                ('features', models.TextField(verbose_name='Особенности модели')),
                ('main_fabric', models.CharField(max_length=120, verbose_name='Основная ткань')),
                ('image', models.ImageField(blank=True, upload_to='images', verbose_name='Изображение')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.color', verbose_name='Цвет')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Вид изделия',
                'verbose_name_plural': 'Вид изделия',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('russian_size', models.CharField(max_length=3, verbose_name='Российский размер')),
                ('international_size', models.CharField(max_length=3, verbose_name='Международный размер')),
            ],
            options={
                'verbose_name': 'Размер',
                'verbose_name_plural': 'Размеры',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('discount', models.IntegerField(blank=True, null=True, verbose_name='Процент скидки')),
                ('start', models.DateField(verbose_name='Дата начала действия')),
                ('end', models.DateField(verbose_name='Дата окончания действия')),
            ],
            options={
                'verbose_name': 'Акция',
                'verbose_name_plural': 'Акции',
            },
        ),
        migrations.CreateModel(
            name='Type_of_fastener',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Вид застежки',
                'verbose_name_plural': 'Виды застежки',
            },
        ),
        migrations.CreateModel(
            name='Type_of_pockets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип карманов',
                'verbose_name_plural': 'Типы карманов',
            },
        ),
        migrations.CreateModel(
            name='Unit_of_measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=60, verbose_name='Полное наименование')),
                ('short_name', models.CharField(max_length=60, verbose_name='Краткое наименование')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Отчество')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Product_composition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.material', verbose_name='Материал')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.product', verbose_name='Изделие')),
            ],
            options={
                'verbose_name': 'Состав изделия',
                'verbose_name_plural': 'Составы изделий',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.product_type', verbose_name='Вид изделия'),
        ),
        migrations.AddField(
            model_name='product',
            name='size',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.size', verbose_name='Размер'),
        ),
        migrations.AddField(
            model_name='product',
            name='type_of_fastener',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.type_of_fastener', verbose_name='Вид застежки'),
        ),
        migrations.AddField(
            model_name='product',
            name='type_of_pockets',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.type_of_pockets', verbose_name='Тип карманов'),
        ),
        migrations.CreateModel(
            name='Price_list_services_pozition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Цена услуги в прайс-листе, руб.')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Repair.employee', verbose_name='Сотрудник')),
                ('price_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.price_list_material', verbose_name='Прайс-лист')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Позиция прайс-листа на услуги',
                'verbose_name_plural': 'Позиции прайс-листа на услуги',
                'ordering': ['cost'],
            },
        ),
        migrations.CreateModel(
            name='Price_list_services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Номер прайс-листа')),
                ('date', models.DateField(auto_now_add=True, null=True, verbose_name='Дата утверждения прайс-листа')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Repair.employee', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Прайс-лист на услуги',
                'verbose_name_plural': 'Прайс-листы на услуги',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Price_list_material_pozition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Цена материала в прайс-листе, руб.')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Repair.employee', verbose_name='Сотрудник')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.material', verbose_name='Материал')),
                ('price_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.price_list_material', verbose_name='Прайс-лист')),
            ],
            options={
                'verbose_name': 'Позиция прайс-листа на материалы',
                'verbose_name_plural': 'Позиции прайс-листа на материалы',
                'ordering': ['cost'],
            },
        ),
        migrations.CreateModel(
            name='Materials_order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(verbose_name='Количество')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.order', verbose_name='Заказ')),
                ('pozition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.price_list_material_pozition', verbose_name='Позиция прайс-листа')),
            ],
            options={
                'verbose_name': 'Материал к заказу',
                'verbose_name_plural': 'Материалы к заказу',
            },
        ),
        migrations.CreateModel(
            name='Materials_accounting_journal_pozition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('remains_start', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Остаток на начало дня')),
                ('remains_end', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Остаток на конец дня')),
                ('journal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.materials_accounting_journal', verbose_name='Журнал учета материалов')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.material', verbose_name='Материал')),
                ('unit_of_measurement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.unit_of_measurement', verbose_name='Единица измерения')),
            ],
        ),
        migrations.CreateModel(
            name='Material_characteristics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('value', models.TextField(verbose_name='Значение')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.material', verbose_name='Материал')),
            ],
            options={
                'verbose_name': 'Характеристика материала',
                'verbose_name_plural': 'Характеристики материала',
            },
        ),
        migrations.AddField(
            model_name='material',
            name='unit_of_measurement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Repair.unit_of_measurement', verbose_name='Единица измерения'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Адрес')),
                ('discount', models.IntegerField(blank=True, null=True, verbose_name='Персональная скидка')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
    ]
